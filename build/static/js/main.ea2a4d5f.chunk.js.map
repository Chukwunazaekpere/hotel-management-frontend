{"version":3,"sources":["components/Utilities/sidebar.jsx","components/Utilities/Navbar.jsx","components/Routes/RestrictedRoutes.jsx","components/Utilities/Button.jsx","components/Homepage.jsx","components/Authentication/AuthState.jsx","components/Authentication/Login.jsx","components/Utilities/Dashboard.jsx","components/Authentication/Signin.jsx","components/Utilities/Undefined.jsx","components/Authentication/ForgotPassword.jsx","components/Authentication/UsernameLogin.jsx","components/UserComponents/OccupantDetails.jsx","components/UserComponents/RoomList.jsx","components/UserComponents/RoomReservation.jsx","components/Routes/UnrestrictedRoutes.jsx","App.js","index.js"],"names":["Sidebar","navRoutes","className","map","linkItem","index","key","to","Navbar","activeItem","fontStyle","fontWeight","this","props","sidebarHandler","isToggled","console","log","Fragment","activeStyle","onClick","React","Component","RestrictedRoutes","component","path","render","Button","action","text","submitRegistration","submitLogin","logoutHandler","resetPassword","showRoomList","directToBookRoomPage","Homepage","useState","sidebar","setSidebar","match","state","authState","status","setState","Login","handleChange","event","formChanges","loginForm","target","name","value","populateLoginFormDetails","handleLogin","axios","post","loginFormDetails","then","response","allowLogin","authstate","changeAuthState","catch","error","loginFormErrors","data","Email","Password","formErrors","fieldName","fieldValue","populatedForm","formFieldNames","field","push","style","backgroundColor","border","borderColor","borderRadius","color","fontFamily","type","placeholder","onChange","handleResetPassword","Dashboard","Signin","signupForm","populateSignupFormDetails","handleSignup","signupFormDetails","allowSignin","signupFormErrors","Undefined","minHeight","ForgotPassword","allowReset","UsernameLogin","Username","RoomReservation","formFieldChanges","roomReservationForm","updateReservationDetails","handleShowRoomList","preventDefault","firstname","roomReservationDetails","Firstname","lastname","Lastname","email","phone","Phone","duration","Duration","toggleRoomListDisplay","formErrorDetails","updatedformFields","formFields","toLowerCase","min","pathname","occupant_details","RoomList","bookingHandler","detail","room_details","permitRoomBooking","chosenRoomDetails","listOfRooms","get","heading","id","room_type","room_price","room_number","room_status","handleChangePhone","occupants_phone","location","field_values","disabled","defaultValue","required","UnrestrictedRoutes","exact","OccupantDetails","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea2a4d5f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"../styles/sidebar.css\";\r\nimport \"animate.css\";\r\n\r\n\r\nexport const Sidebar = () => {\r\n  const navLinkItems = [\r\n    \"Make reservation\",\r\n    \"Complete your reservation\",\r\n    \"Home\",\r\n    \"Services\",\r\n    \"About\",\r\n    \"Contact-us\",\r\n  ];\r\n\r\n  const navRoutes = [\r\n    \"occupant-details\",\r\n    \"complete-booking-reservation\",\r\n    \"/\",\r\n    \"services\",\r\n    \"about\",\r\n    \"contact-us\",\r\n  ];\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"sidebar\">\r\n        {navLinkItems.map( (linkItem, index) => (\r\n          <span key={linkItem} className=\"sidebar-menu\">\r\n            <NavLink to={navRoutes[index]}>{linkItem}</NavLink>\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\nimport \"../styles/navbarStyles.css\";\r\nimport * as FaIcons from 'react-icons/fa'\r\nimport * as AiIcons from 'react-icons/ai';\r\n\r\nimport {Sidebar} from './sidebar'\r\nimport 'animate.css';\r\n\r\n\r\nclass Navbar extends React.Component {\r\n\r\n  render() {\r\n    const navLinkItems = [\"Home\", \"Services\", \"About\", \"Contact-us\"];\r\n\r\n    const activeItem = {\r\n      fontStyle: \"italic\",\r\n      fontWeight: \"bold\",\r\n    };\r\n\r\n\r\n    const navRoutes = ['/', 'services', 'about', 'contact-us']\r\n    // toggles the sidebar\r\n    const { sidebarHandler, isToggled } = this.props;\r\n    console.log(\"\\n\\t value: \", sidebarHandler)\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"row\">\r\n                <section className=\"site-name col-md-4\">\r\n                    <h3 className='animate__animated animate__heartBeat animate__infinite'>\r\n                        Hotel Celestial\r\n                    </h3>\r\n                </section>\r\n\r\n                <section className='navbar-buttons col-md-5'>\r\n                    {\r\n                        !isToggled ?\r\n                            <section className='button-styles'>\r\n                                {navLinkItems.map( (linkItem, index) => (\r\n                                    <span key={linkItem}>\r\n                                        <NavLink to={ navRoutes[index] }\r\n                                            className=\"btn text-white\" activeStyle={activeItem}>\r\n                                            {linkItem}\r\n                                        </NavLink>\r\n                                    </span>\r\n                                ))}\r\n                            </section>\r\n                            :\r\n                            null\r\n                    }\r\n                </section>\r\n                \r\n                <section className='animate__animated animate__heartBeat animate__infinite nav-menu-bar'>\r\n                    {\r\n                        !isToggled ?\r\n                            <React.Fragment>\r\n                                <Link to='#'>\r\n                                    <FaIcons.FaBars onClick={ sidebarHandler }/>\r\n                                </Link>\r\n                                <h6 className='text-white'>More details here...</h6>\r\n                            </React.Fragment>\r\n                            :\r\n                            <React.Fragment>\r\n                                <Link to='#'>\r\n                                    <AiIcons.AiOutlineClose onClick={ sidebarHandler } />\r\n                                    <h6 className='text-white'>Collapse details</h6>\r\n                                </Link>\r\n                            </React.Fragment>\r\n                    }\r\n                </section>\r\n\r\n            </div>\r\n        </React.Fragment>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Route, Link, Redirect } from \"react-router-dom\";\r\nimport Navbar from \"../Utilities/Navbar\";\r\n\r\n\r\nexport const RestrictedRoutes = ({component: Component, path, ...props}) => {\r\n    // console.log(path, Component)\r\n    return (\r\n        <div>\r\n            <div className='row'>\r\n                <div className='col'>\r\n                    <Navbar />\r\n                    <Route {...props} render={ props => {\r\n                        return <Route path={`/${path}`} component={Component} />\r\n                        }}\r\n                    />\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport '../styles/buttonStyles.css';\r\nimport 'animate.css';\r\n\r\n\r\nclass Button extends React.Component{\r\n    render(){\r\n        const { action, text, path, submitRegistration,\r\n                submitLogin, logoutHandler, resetPassword,\r\n                showRoomList, directToBookRoomPage } = this.props;\r\n\r\n        return(\r\n            <div className='btn-styles'>\r\n                {\r\n                    // Navigate user to \"Log -in\" page\r\n                    \r\n                    path === 'Forgot password ?' ?\r\n                        <Link to='/forgot-password' className='btn btn-secondary'>{path}</Link>\r\n                    :\r\n                    path === 'username-login' ?\r\n                        <Link to={`${path}`} className='btn btn-info'>\r\n                            {action}\r\n                        </Link>\r\n                    :\r\n                    path === 'roomlist' ?\r\n                        <Link to={`/${path}`} onClick={ showRoomList } className='btn btn-info'>\r\n                            {action || text}\r\n                        </Link>\r\n                    :\r\n                    path === 'payment' ?\r\n                        <Link to={`${path}`} onClick={ showRoomList } className='btn btn-payment'>\r\n                            {text}\r\n                        </Link>\r\n                    :\r\n                    // Submit 'sign-in form' for validation\r\n                    action === 'Sign up' ?\r\n                        <button className='btn btn-success' onClick={submitRegistration}>{action}</button>\r\n                    :\r\n                    action === 'Complete your reservation' ?\r\n                        <button className='btn btn-success' onClick={submitLogin}>{action}</button>\r\n                    :\r\n                    action === 'Log out' ?\r\n                        <button className='btn btn-success' onClick={logoutHandler}>{action}</button>\r\n                    :\r\n                    action === 'Reset password' ?\r\n                        <button className='btn btn-success' onClick={resetPassword}>{action}</button>\r\n                    :\r\n                    action === 'Book room' ?\r\n                    <button className='btn btn-info' onClick={ directToBookRoomPage }>{action}</button>\r\n                    :\r\n                    <Link to={['/', '/celestial']} className='btn btn-primary'>Go Back To Homepage</Link>\r\n\r\n                }\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Button;","import React, { useState } from \"react\";\r\nimport Button from \"./Utilities/Button\";\r\nimport Navbar from \"./Utilities/Navbar\";\r\n\r\nimport './styles/homepageStyles.css';\r\nimport { Sidebar } from './Utilities/sidebar';\r\n\r\n\r\nexport const Homepage = (props) => {\r\n\r\n    const [sidebar, setSidebar] = useState(false)\r\n    const showSidebar = () => setSidebar(!sidebar)\r\n\r\n    //=======================================================================\r\n    if(props.match.path === '/' || props.match.path === '/celestial'){\r\n\r\n        return (\r\n            <div className='welcome-screen'>\r\n                <section className='row navbar-section'>\r\n                    <section className='col'>\r\n                        <Navbar sidebarHandler={showSidebar} isToggled={sidebar}/>\r\n                    </section>\r\n                </section>\r\n\r\n\r\n                    <section className='row'>\r\n                        <span >\r\n                            <span className='sidebar col-md-6'>\r\n                                {\r\n                                    sidebar ?\r\n                                        <ul>\r\n                                            <li><Sidebar /></li>\r\n                                        </ul>\r\n                                        :\r\n                                        null\r\n                                }\r\n                            </span>\r\n                            <h1 className='welcome-text animate__animated animate__flash animate__infinite mt-5'>\r\n                                Hospitality, Kingly...\r\n                            </h1>\r\n                            \r\n                        </span>\r\n                    </section>\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n","import React from \"react\";\r\n\r\nclass AuthState extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            authState: false\r\n        }\r\n    }\r\n\r\n    isAuthenticated(){\r\n        return this.state.authState;\r\n    }\r\n\r\n    \r\n    changeAuthState(status){\r\n        this.setState({ authState: status });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default new AuthState();","import React from 'react';\r\nimport Button from \"../Utilities/Button\";\r\nimport authstate from \"./AuthState\";\r\n\r\nimport axios from \"axios\";\r\n\r\n\r\nclass Login extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            loginForm: {\r\n                Email: \"\",\r\n                Password: \"\",\r\n            },\r\n\r\n            loginFormDetails: {},\r\n            formErrors: {},\r\n\r\n            allowLogin: false,\r\n            loginFormErrors: {},\r\n        }\r\n        \r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let formChanges = this.state.loginForm;\r\n        formChanges[event.target.name] = event.target.value;\r\n\r\n        this.setState({ loginForm: formChanges })\r\n        this.populateLoginFormDetails(event.target.name, event.target.value)\r\n    }\r\n\r\n    populateLoginFormDetails(fieldName, fieldValue){\r\n        let populatedForm = this.state.loginFormDetails;\r\n        populatedForm[fieldName] = fieldValue;\r\n\r\n        this.setState({ loginFormDetails: populatedForm })\r\n        // console.log(\"\\n\\t Form details: \", this.state.loginFormDetails)\r\n    }\r\n\r\n    handleLogin = () => {\r\n        axios.post(\"http://127.0.0.1:8000/auth/login/\",\r\n                    this.state.loginFormDetails)\r\n            .then( response => {\r\n                this.setState({ allowLogin: true })\r\n                authstate.changeAuthState(this.state.allowLogin)\r\n            }).catch( error => \r\n                    this.setState({ loginFormErrors: error.response.data })\r\n            )\r\n    }\r\n\r\n    render(){\r\n        // Make an array whose elements are the keys of the login-form\r\n        let formFieldNames = [];\r\n        for(let field in this.state.loginForm){\r\n            formFieldNames.push(field)\r\n        }\r\n\r\n        const formStyle = {\r\n            backgroundColor: 'lightseagreen',\r\n            border: '30px',\r\n            borderColor: '#282c34',\r\n            borderRadius: '10px',\r\n            color: 'black',\r\n            fontFamily: \"Georgia, Verdana, Geneva, Tahoma, sans-serif\",\r\n            // borderImage: url(),\r\n          }\r\n\r\n        return(\r\n            <React.Fragment>\r\n\r\n                <div className='row'>\r\n                    <div className='col-5 mt-5 mb-3'> </div>\r\n                    <div className='mt-3 mb-2'><h2 >Log in:</h2></div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className='col-4 mb-3'> </div>\r\n                                    \r\n                    {/* use field names in \"formFieldNames\" array */}\r\n                    <div style={formStyle} className='col-3 ml-3' >\r\n                        {\r\n                            formFieldNames.map( (fieldName, index) => \r\n                            <div key={fieldName}>\r\n\r\n                                    <h5 className='mt-3'>{ fieldName }:</h5>\r\n                                    {/* if field propagates errors */}\r\n                                    <h4>{this.state.formErrors[fieldName]}</h4> \r\n\r\n                                    <input className='mt-3 mb-2 form-control' \r\n                                        type={ fieldName === 'Email' ? 'email': \"password\"} \r\n\r\n                                        placeholder={ index > 2 ? \"Ensure both password fields are the same\": \"\"} \r\n                                        name={fieldName}\r\n                                        value={this.state.loginForm[fieldName]}\r\n                                        onChange={this.handleChange}\r\n                                        /> \r\n                                        \r\n                                </div>\r\n                            )\r\n                        }\r\n                        <div className='row'>\r\n                            <div className='col-4 mr-4 mb-3 mt-3'>\r\n                                <Button action='Log in' submitLogin={this.handleLogin} path='dashboard'/>\r\n                            </div>\r\n                            \r\n                            <div className='col ml-3 mb-3 mt-3'>\r\n                                <Button path='Forgot password ?'/>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row mt-3'>\r\n                            <div className='col-10 mb-2 ml-5'>\r\n                                <Button action='Log in with username instead' \r\n                                    path='username-login' \r\n                                    resetPassword={this.handleResetPassword}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>           \r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\n\r\nexport const Dashboard = () => {\r\n    return(\r\n        <div>\r\n            <h2>Dashboard</h2>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Button from \"../Utilities/Button\";\r\nimport axios from \"axios\";\r\n\r\nimport authstate from \"./AuthState\";\r\n\r\nimport { RestrictedRoutes } from \"../Routes/RestrictedRoutes\";\r\nimport { UnrestrictedRoutes } from \"../Routes/UnrestrictedRoutes\";\r\n\r\nimport {Dashboard} from \"../Utilities/Dashboard\";\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass Signin extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            signupForm: {\r\n                'Firstname'       : \"\",\r\n                'Lastname'        : \"\",\r\n                'Email'           : \"\",\r\n                'Password'        : \"\",\r\n                'Confirm password': \"\"\r\n            },\r\n\r\n            signupFormDetails: {}, // This object holds acceptable form details for submission\r\n\r\n            signupFormErrors: {},\r\n\r\n            allowSignin: false\r\n        }\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let formChanges = this.state.signupForm;\r\n        formChanges[event.target.name] = event.target.value;\r\n\r\n        this.setState({ signupForm: formChanges })\r\n        this.populateSignupFormDetails(event.target.name, event.target.value)\r\n    }\r\n\r\n    populateSignupFormDetails(fieldName, fieldValue){\r\n        let populatedForm = this.state.signupFormDetails;\r\n        populatedForm[fieldName] = fieldValue;\r\n\r\n        this.setState({ signupFormDetails: populatedForm })\r\n        // console.log(\"\\n\\t Form details: \", this.state.signupFormDetails)\r\n    }\r\n\r\n    handleSignup = (event) =>{\r\n        console.log(\"\\n\\t Props: signing in...\")\r\n        \r\n\r\n        axios.post(\"http://localhost:8000/auth/registration/\",\r\n                    this.state.signupFormDetails)\r\n             .then( response => {\r\n                //  if promise was fulfilled, push user to \"verificationEmailSent page\"\r\n                this.setState({ allowSignin: true })\r\n                authstate.changeAuthState( this.state.allowSignin )\r\n                console.log(response.data)\r\n\r\n             }).catch( error => {\r\n                //  If there are errors in the form, display errors, but user remains on\r\n                // the sign-up page\r\n                this.setState({ signupFormErrors: error.response.data })\r\n\r\n                console.log(error.response.data)\r\n            })\r\n    }\r\n\r\n\r\n    render(){\r\n        // Make an array whose elements are the keys of the signup-form\r\n        let formFieldNames = [];\r\n        for(let field in this.state.signupForm){\r\n            formFieldNames.push(field)\r\n        }\r\n\r\n        const formStyle = {\r\n            backgroundColor: 'lightseagreen',\r\n            border: '30px',\r\n            borderColor: '#282c34',\r\n            borderRadius: '10px',\r\n            color: 'black',\r\n            fontFamily: \"Georgia, Verdana, Geneva, Tahoma, sans-serif\",\r\n          }\r\n\r\n        return(\r\n            <React.Fragment>\r\n\r\n                <div className='row'>\r\n                    <div className='col-5 mt-5 mb-3'> </div>\r\n                    <div className='mt-3 mb-2'><h2 >Sign up:</h2></div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className='col-4 mb-3'> </div>\r\n                                    \r\n                    {/* use field names in \"formFieldNames\" array */}\r\n                    <div style={formStyle} className='col-3 ml-3' >\r\n                        {\r\n                            formFieldNames.map( (fieldName, index) => \r\n                                <div key={fieldName}>\r\n\r\n                                    <h5 className='mt-3'>{ fieldName }:</h5>\r\n                                    {/* if field propagates errors */}\r\n                                    <h4>{this.state.signupFormErrors[fieldName]}</h4> \r\n\r\n                                    <input className='mt-3 mb-2 form-control' \r\n                                        type={ fieldName === 'Email' ? 'email': index <= 1 ? \"text\": \"password\"} \r\n                                        placeholder={ index > 2 ? \"Ensure both password fields are the same.\": \"\"} \r\n                                        name={fieldName}\r\n                                        value={this.state.signupForm[fieldName]}\r\n                                        onChange={this.handleChange}\r\n                                        /> \r\n                                        \r\n                                </div>\r\n                            )\r\n                        }\r\n                        <div className='mb-3 mt-3'>\r\n                            <Button action='Sign up' submitRegistration={this.handleSignup} path='dashboard'/>\r\n                        </div>\r\n                    </div>           \r\n                </div>\r\n\r\n                <div>\r\n                    {\r\n                        this.state.allowSignin === true ?\r\n                        <RestrictedRoutes path='/dashboard' component={Dashboard} />\r\n                        :\r\n                        <Redirect to='/signin' />\r\n                    }\r\n                </div>\r\n                \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signin;","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nexport const Undefined = () =>{\r\n    const style = {\r\n        fontFamily: \"Georgia, Verdana, Geneva, Tahoma, sans-serif\",\r\n        backgroundColor: \"aquamarine\",\r\n        minHeight: \"100vh\",\r\n        fontWeight: 'bold',\r\n        fontStyle: \"italic\",\r\n        color: 'white',\r\n        fontWeight: 'bold'\r\n      }\r\n\r\n    return(\r\n        <React.Fragment>\r\n\r\n            <div className='row' style={style}>\r\n                <div className='col-4 mt-5 mb-5'></div>\r\n                <div className='col-4 mt-5'>\r\n                    <h1>PAGE NOT FOUND</h1>\r\n                    <div className='ml-5 col-8'>\r\n                        <Button />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n           \r\n\r\n        </React.Fragment>\r\n\r\n        \r\n    )\r\n}","import React from \"react\";\r\nimport Button from \"../Utilities/Button\";\r\nimport authstate from \"./AuthState\";\r\n\r\nimport axios from \"axios\";\r\n\r\n\r\nclass ForgotPassword extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            Email: \"\",\r\n\r\n            allowReset: false,\r\n            formErrors: {}\r\n\r\n        }\r\n    }\r\n\r\n    handleChange = () =>{\r\n\r\n    }\r\n\r\n    handleResetPassword = () => {\r\n        axios.post(\"http<//127.0.0.1:8000/auth/reset-password\",\r\n                    this.state.Email)\r\n             .then( response => {\r\n                this.setState({ allowReset: true })\r\n                authstate.changeAuthState(this.state.allowReset)\r\n                })\r\n            .catch( error => {\r\n                this.setState({ formErrors: error.response.data })\r\n            })\r\n    }\r\n\r\n    render(){\r\n        const signupStyle = {\r\n            backgroundColor: 'lightseagreen',\r\n            border: '30px',\r\n            borderColor: '#282c34',\r\n            borderRadius: '10px',\r\n            color: 'black',\r\n            fontFamily: \"Georgia, Verdana, Geneva, Tahoma, sans-serif\",\r\n          }\r\n\r\n        return(\r\n            <div>\r\n                <div className='row mt-5'>\r\n                    <div className='col-5 mt-5'></div>\r\n\r\n                </div>\r\n                <div className='row mt-5'>\r\n                    <div className='col-4 ml-5'></div>\r\n\r\n                    <div className='col-3 ml-4'><h2>Password Reset:</h2></div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className='col-3 mr-5'></div>\r\n\r\n                    <div style={signupStyle} className='col-5 form-group'>\r\n                        <h5 className='mt-2'>Email:</h5>\r\n                        {this.state.formErrors['Email']}\r\n                        <input className='form-control mb-3'\r\n                            type=\"email\" \r\n                            name=\"Email\" \r\n                            onChange={this.handleChange}\r\n                            placeholder= \"Please enter the email-address you provided upon registration.\"\r\n                            value={this.state.Email}/>\r\n\r\n                        <div className='row mb-2 mt-2'>\r\n                            <div className='col-6'>\r\n                                <Button action='Reset password' />\r\n                            </div>\r\n                            <div className='col ml-4'>\r\n                                <Button action='Log in with username instead' \r\n                                        path='username-login' \r\n                                        resetPassword={this.handleResetPassword}/>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    \r\n\r\n                </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ForgotPassword;","import React from 'react';\r\nimport Button from \"../Utilities/Button\";\r\nimport authstate from \"./AuthState\";\r\n\r\nimport axios from \"axios\";\r\n\r\n\r\nclass UsernameLogin extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            loginForm: {\r\n                Username: \"\",\r\n                Password: \"\",\r\n            },\r\n\r\n            loginFormDetails: {},\r\n            formErrors: {},\r\n\r\n            allowLogin: false,\r\n            loginFormErrors: {},\r\n        }\r\n        \r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let formChanges = this.state.loginForm;\r\n        formChanges[event.target.name] = event.target.value;\r\n\r\n        this.setState({ loginForm: formChanges })\r\n        this.populateLoginFormDetails(event.target.name, event.target.value)\r\n    }\r\n\r\n    populateLoginFormDetails(fieldName, fieldValue){\r\n        let populatedForm = this.state.loginFormDetails;\r\n        populatedForm[fieldName] = fieldValue;\r\n\r\n        this.setState({ loginFormDetails: populatedForm })\r\n        // console.log(\"\\n\\t Form details: \", this.state.loginFormDetails)\r\n    }\r\n\r\n    handleLogin = () => {\r\n        axios.post(\"http://127.0.0.1:8000/auth/login/\",\r\n                    this.state.loginFormDetails)\r\n            .then( response => {\r\n                this.setState({ allowLogin: true })\r\n                authstate.changeAuthState(this.state.allowLogin)\r\n            }).catch( error => \r\n                    this.setState({ loginFormErrors: error.response.data })\r\n            )\r\n    }\r\n\r\n    render(){\r\n        // Make an array whose elements are the keys of the login-form\r\n        let formFieldNames = [];\r\n        for(let field in this.state.loginForm){\r\n            formFieldNames.push(field)\r\n        }\r\n\r\n        const formStyle = {\r\n            backgroundColor: 'lightseagreen',\r\n            border: '30px',\r\n            borderColor: '#282c34',\r\n            borderRadius: '10px',\r\n            color: 'black',\r\n            fontFamily: \"Georgia, Verdana, Geneva, Tahoma, sans-serif\",\r\n            // borderImage: url(),\r\n          }\r\n\r\n        return(\r\n            <React.Fragment>\r\n\r\n                <div className='row'>\r\n                    <div className='col-5 mt-5 mb-3'> </div>\r\n                    <div className='mt-3 mb-2'><h2 >Log in:</h2></div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className='col-4 mb-3'> </div>\r\n                                    \r\n                    {/* use field names in \"formFieldNames\" array */}\r\n                    <div style={formStyle} className='col-3 ml-3' >\r\n                        {\r\n                            formFieldNames.map( (fieldName, index) => \r\n                            <div key={fieldName}>\r\n\r\n                                    <h5 className='mt-3'>{ fieldName }:</h5>\r\n                                    {/* if field propagates errors */}\r\n                                    <h4>{this.state.formErrors[fieldName]}</h4> \r\n\r\n                                    <input className='mt-3 mb-2 form-control' \r\n                                        type={ fieldName === 'Email' ? 'email': \"password\"} \r\n\r\n                                        placeholder={ index > 2 ? \"Ensure both password fields are the same\": \"\"} \r\n                                        name={fieldName}\r\n                                        value={this.state.loginForm[fieldName]}\r\n                                        onChange={this.handleChange}\r\n                                        /> \r\n                                        \r\n                                </div>\r\n                            )\r\n                        }\r\n                        <div className='row'>\r\n                            <div className='col-4 mr-4 mb-3 mt-3'>\r\n                                <Button action='Log in' submitLogin={this.handleLogin} path='dashboard'/>\r\n                            </div>\r\n                            <div className='col ml-3 mb-3 mt-3'>\r\n                                <Button path='Forgot password ?'/>\r\n                            </div>\r\n                        </div>\r\n                    </div>           \r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UsernameLogin;","import React from \"react\";\r\nimport Button from \"../Utilities/Button\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport \"animate.css\";\r\nimport \"../styles/occupantDetails.css\";\r\n\r\n\r\nclass RoomReservation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      roomReservationForm: {\r\n        Firstname: \"\",\r\n        Lastname: \"\",\r\n        Email: \"\",\r\n        Phone: \"\",\r\n        Duration: \"\",\r\n      },\r\n\r\n      roomReservationDetails: {},\r\n\r\n      formErrorDetails: {},\r\n\r\n      // This variable helps in toggling the display of room list when a\r\n      // user fills in the room-reservation form\r\n      toggleRoomListDisplay: false,\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    let formFieldChanges = this.state.roomReservationForm;\r\n    formFieldChanges[event.target.name] = event.target.value;\r\n\r\n    this.setState({ roomReservationForm: formFieldChanges });\r\n    // pass values\r\n    this.updateReservationDetails(event.target.name, event.target.value);\r\n  };\r\n\r\n  updateReservationDetails(fieldName, fieldValue) {\r\n    let updatedformFields = this.state.roomReservationDetails;\r\n    updatedformFields[fieldName] = fieldValue;\r\n\r\n    this.setState({ roomReservationDetails: updatedformFields });\r\n\r\n    console.log(\"\\n\\t Details: \", this.state.roomReservationDetails);\r\n  }\r\n\r\n  handleShowRoomList = (event) => {\r\n    event.preventDefault();\r\n    // Submit users data in order to reserve room(s)\r\n    axios\r\n      .post(\"http://localhost:8000/create-occupant/\", {\r\n        firstname: this.state.roomReservationDetails.Firstname,\r\n        lastname: this.state.roomReservationDetails.Lastname,\r\n        email: this.state.roomReservationDetails.Email,\r\n        phone: this.state.roomReservationDetails.Phone,\r\n        duration: this.state.roomReservationDetails.Duration,\r\n      })\r\n      .then((response) => {\r\n        console.log(\"\\n\\t Status: \", response.status);\r\n        this.setState({ toggleRoomListDisplay: true });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"\\n\\t There were errors...\");\r\n        this.setState({ formErrorDetails: error.response.data });\r\n        console.log(\"\\n\\t Errors: \", error.response.data);\r\n        console.log(\"\\n\\t State Errors: \", this.state.formErrorDetails);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    let formFields = [];\r\n    for (let key in this.state.roomReservationForm) {\r\n      formFields.push(key);\r\n    }\r\n\r\n    return (\r\n        <div className='background-style'>\r\n            <section className=\"bg bg-textheading col-md-5\">\r\n                <h3 className=\"animate__animated animate__pulse animate__repeat-3  3 col- mt-5 ml-5\">\r\n                    Please fill in the required details to see the available rooms.\r\n                </h3>\r\n            </section>\r\n\r\n            <section className=\"form-style\">\r\n                <div className=\"input-fields col-md-6 animate__animated animate__swing\" >\r\n                    {\r\n                        formFields.map( field => (\r\n                            <div key={field} className='form-group'>\r\n                                {/* place fields */}\r\n                                <h5 className=\"mt-3 text-white\">{field}:</h5>\r\n                                {/* place any field error */}\r\n                                <h4>{this.state.formErrorDetails[`${field.toLowerCase()}`]}</h4>\r\n                                <input className=\"form-control \"\r\n                                        type={ field === \"Email\" ? \"email\" : \r\n                                            field === \"Phone\" ? \"tel\" : \r\n                                            field === \"Duration\" ? \"number\" : \"text\" }\r\n                                    min={field === \"Duration\" ? 1 : \"\"}\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.roomReservationForm[field]}\r\n                                    name={field}\r\n                                    placeholder={\r\n                                        field === \"Duration\"\r\n                                        ? \"Please, how long are you staying?\"\r\n                                        : field === \"Email\"\r\n                                        ? \"Please enter an active email address\"\r\n                                        : field === \"Lastname\"\r\n                                        ? \"Your surname, please.\"\r\n                                        : \"\"\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        ))\r\n                    }\r\n                    <div className=\"submit-button\">\r\n                        <Button action=\"Available Rooms\" path=\"roomlist\"\r\n                            showRoomList={this.handleShowRoomList} />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            {this.state.toggleRoomListDisplay === true ? (\r\n            // We're passing 'room_type' to the state props, 'cos we'll need\r\n            // to call the roomlist, which will then querry the backend\r\n            // for a request with the 'room_type'.\r\n            <Redirect\r\n                to={{\r\n                pathname: \"/roomlist\",\r\n                state: { occupant_details: this.state.roomReservationDetails },\r\n                }}\r\n            />\r\n            ) : (\r\n            <Redirect to=\"/occupant-details\" />\r\n            )}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RoomReservation;\r\n","import React from \"react\";\r\nimport Button from \"../Utilities/Button\";\r\nimport axios from \"axios\";\r\n\r\nimport \"../styles/roomListStyles.css\";\r\nimport { Prompt, Redirect } from 'react-router-dom';\r\nimport 'animate.css';\r\n\r\n\r\nclass RoomList extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            listOfRooms: [],\r\n\r\n            // This state-variable becomes true when the user clicks on the \r\n            // \"Book room\" button.\r\n            permitRoomBooking: false,\r\n\r\n            chosenRoomDetails: {},\r\n\r\n            occupant_details: [],\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({ permitRoomBooking: false })\r\n\r\n        axios.get(`http://127.0.0.1:8000/roomslist/`)\r\n        .then( response => {\r\n            console.log(\"\\n\\t Rooms: \", response.data )\r\n            this.setState({ listOfRooms: response.data })\r\n\r\n        }).catch( () => {\r\n            this.setState({ listOfRooms: 'There are no available rooms yet'})\r\n        })\r\n    }\r\n\r\n    bookingHandler = (detail) => {\r\n        const room_details = detail;\r\n\r\n        this.setState({ permitRoomBooking: true })\r\n        this.setState({ chosenRoomDetails: room_details })\r\n        \r\n    }\r\n\r\n    render(){\r\n        const columnHeading = ['Room type', \"Room price\",\r\n                                \"Room number\", \"Status\"]\r\n\r\n        return(\r\n            <div>\r\n                {\r\n                    this.state.listOfRooms ?\r\n                    <React.Fragment>\r\n                        <div className='row'>\r\n                            <h2 className='col'>Available Rooms:</h2>\r\n                        </div>\r\n\r\n                        <table className='table table-striped table-hover table_style\r\n                                          animate__animated animate__heartBeat'>\r\n                            <thead>\r\n                                <tr>\r\n                                    {\r\n                                        columnHeading.map( (heading, index) => \r\n                                        <th key={index}>{ heading }</th>\r\n                                        )\r\n                                    }\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {\r\n                                    this.state.listOfRooms.map( detail => \r\n                                        <tr key={ detail.id } >\r\n                                            <td>{detail.room_type}</td> \r\n                                            <td>{detail.room_price}</td>\r\n                                            <td>{detail.room_number}</td>\r\n                                            <td>{detail.room_status}</td>\r\n\r\n                                            <span>\r\n                                                <Button action='Book room'\r\n                                                directToBookRoomPage={() => this.bookingHandler(detail)}/>    \r\n                                            </span>\r\n                                        </tr>\r\n                                    )   \r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </React.Fragment>\r\n                        :\r\n                    <React.Fragment>\r\n                        <h3>There are no available rooms yet</h3>\r\n                    </React.Fragment>  \r\n                }                \r\n\r\n                {\r\n                    this.state.permitRoomBooking === true ?\r\n                    <Redirect to={{\r\n                        pathname: '/room-reservation',\r\n                        state: {\r\n                            room_details: this.state.chosenRoomDetails,\r\n                            occupant_details: this.state.occupant_details\r\n                        }\r\n                    }} \r\n                    />\r\n                    :\r\n                    <Redirect to='/roomlist' />\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomList;","import React, { useState } from 'react';\r\nimport 'animate.css';\r\nimport Button from \"../Utilities/Button\";\r\n\r\nimport '../styles/roomReservationStyles.css';\r\nimport 'animate.css';\r\n\r\n\r\nclass RoomReservation extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            room_details: {},\r\n\r\n            occupants_phone: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount (){\r\n        if ( this.props.location.state ) {\r\n            const { room_details } = this.props.location.state;\r\n            console.log(\"Room Details\", room_details)\r\n            \r\n            this.setState({ room_details })\r\n\r\n        }\r\n    }\r\n\r\n    handleChangePhone = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ occupants_phone: event.target.value })\r\n\r\n    }\r\n\r\n    render () {\r\n        let room_fields = [\r\n            'Room-type', 'Room-price', 'Room-number' \r\n        ]\r\n\r\n        let field_values = [\r\n            'room_type', 'room_price', 'room_number' \r\n        ]\r\n\r\n        return (\r\n            <div className='row reservation_style animate__animated animate__pulse'>\r\n\r\n                <section className='form-style form-group col-4'>\r\n                    <h3 className='mt-3'> Room Details:</h3>\r\n                    {\r\n                        room_fields.map( (field, index) => (\r\n                            <span key={index} >\r\n                                <h5 className='col-4'> {field} </h5> <br/>\r\n                                \r\n                                <input className='col form-control'\r\n                                    disabled={true}\r\n                                    name={field}\r\n                                    defaultValue={this.state.room_details[field_values[0]]}\r\n                                    value={this.state.room_details[field_values[0]]}\r\n\r\n                                    />\r\n                            </span>\r\n                        ))\r\n                    }\r\n\r\n                    <span className='mb-3'>\r\n                        <Button path='roomlist' \r\n                                text='Change room' />\r\n                    </span>\r\n                </section>\r\n\r\n                <section className='form-style form-group col-4 ml-2'>\r\n\r\n                    <h4> Please enter your phone number to proceed: </h4> \r\n                    <span>\r\n                        <input className='form-control'\r\n                                type=\"tel\"\r\n                                required='true'\r\n                                name='phone'\r\n                                value={ this.state.occupants_phone }\r\n                                onChange={this.handleChangePhone}\r\n                                placeholder='Please enter your phone number'\r\n                        /> <br/>\r\n                    </span>\r\n                    <strong>Please ensure the provided data is valid.</strong>     \r\n\r\n                    <span className='mt-4'>\r\n                        <Button path='payment'\r\n                                text='Proceed to payment'\r\n                                />\r\n                    </span>\r\n                </section>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default RoomReservation;","import React from 'react';\r\n\r\nimport { Homepage } from \"../Homepage\"\r\nimport Login from \"../Authentication/Login\";\r\nimport Signin from \"../Authentication/Signin\";\r\nimport { Undefined } from \"../Utilities/Undefined\";\r\n\r\nimport ForgotPassword from \"../Authentication/ForgotPassword\";\r\nimport UsernameLogin from \"../Authentication/UsernameLogin\";\r\n\r\nimport OccupantDetails from \"../UserComponents/OccupantDetails\";\r\nimport RoomList from \"../UserComponents/RoomList\";\r\nimport RoomReservation from '../UserComponents/RoomReservation';\r\n\r\n\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\n\r\n{/* Always keep these pages public */}\r\nexport const UnrestrictedRoutes = () => {\r\n    return(\r\n        <div>\r\n            <Switch>\r\n                <Route path={['/', '/celestial']} exact component={ Homepage } />\r\n                <Route path='/login' component={ Login } />\r\n                <Route path='/signin' component={ Signin } />\r\n                <Route path='/forgot-password' component={ForgotPassword} />\r\n                <Route path='/username-login' component={UsernameLogin} />\r\n\r\n                <Route path='/occupant-details' component={OccupantDetails} />\r\n                <Route path='/roomlist' component={RoomList} />\r\n                <Route path='/room-reservation' component={ RoomReservation } />\r\n\r\n                {/* For any other url which is undefined... */}\r\n                <Route component={Undefined} />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport { Switch } from \"react-router-dom\";\n\nimport { RestrictedRoutes } from \"./components/Routes/RestrictedRoutes\";\nimport { UnrestrictedRoutes } from \"./components/Routes/UnrestrictedRoutes\";\n\n\nexport const App = () => {\n  return (\n    <div className=\" img App\">\n        <Switch>\n          <UnrestrictedRoutes exact />\n\n          <RestrictedRoutes />\n      </Switch>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router >\n      <App />\n    </Router>\n  </React.StrictMode>,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}